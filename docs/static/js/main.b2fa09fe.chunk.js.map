{"version":3,"sources":["styledComponents/styledComponents.js","services/http.js","reducers/dataReducer.js","reducers/paginationReducer.js","components/Post/Post.js","components/PostList/PostList.js","components/Pagination/Pagination.js","components/App/App.js","hooks/useSetData.js","hooks/usePostsFilter.js","hooks/usePagination.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledApp","styled","div","StyledInput","input","StyledPostList","StyledPost","PostTitle","PostBody","PostFooter","StyledPagination","PaginationList","ul","PaginationElement","li","props","active","Http","query","fetch","response","ok","Error","json","data","console","error","message","dataReducer","state","type","payload","isLoading","posts","users","isError","paginationReducer","idxLastPost","idxFirstPost","totalPages","Post","title","body","user","name","username","PostList","postListMap","length","map","id","userId","key","Pagination","switchPage","currentPage","total","numPage","onClick","App","usersList","currentPosts","useState","searchValue","setSearchValue","useReducer","dispatch","useEffect","a","getData","useSetData","value","filteredPosts","setFilteredPosts","filter","post","includes","usePostsFilter","setPage","postsPerPage","paginationState","i","Math","ceil","push","usePagination","reduce","result","slice","onChange","event","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2fa09fe.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  html, body {\n    width: 100%;\n    height: 100%;\n  }\n\n  body {\n    background-color: #EDEDED;\n    font-family: 'Roboto', 'Ubuntu', sans-serif;\n  }\n`\n\nexport const StyledApp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  padding: 64px;\n\n  @media screen and (max-width: 768px) {\n    padding: 16px;\n    justify-content: center;\n  }\n`\n\nexport const StyledTitle = styled.div``\n\nexport const StyledInput = styled.input`\n  max-width: 300px;\n  height: 24px;\n  border: 1px solid #454444;\n  border-radius: 2px;\n  outline: none;\n  padding: 4px;\n  margin-bottom: 16px;\n  box-shadow: 0px 0px 10px 3px rgba(0, 0, 0, 0.5);\n`\n\nexport const StyledPostList = styled.div`\n  width: 50%;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nexport const StyledPost = styled.div`\n  background-color: #ffffff;\n  box-shadow: 0px 0px 10px -2px rgba(0, 0, 0, 1);\n  margin-bottom: 12px;\n  border-radius: 2px;\n`\n\nexport const PostTitle = styled.div`\n  border-radius: 2px 2px 0 0;\n  background-color: #5c25a6;\n  color: #ffffff;\n  text-transform: capitalize;\n  font-size: 1.2em;\n  padding: 4px;\n`\n\nexport const PostBody = styled.div`\n  background-color: #d2b1ff;\n  padding: 4px;\n`\n\nexport const PostFooter = styled.div`\n  text-align: end;\n  padding: 4px;\n  background-color: #c294ff;\n  border-radius: 0 0 2px 2px;\n`\n\nexport const StyledPagination = styled.div`\n  width: 50%;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nexport const PaginationList = styled.ul`\n  list-style: none;\n  display: flex;\n`\n\nexport const PaginationElement = styled.li`\n  user-select: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n  margin: 2px;\n  border: 2px solid #8f22a6;\n  border-radius: 4px;\n  background-color: ${(props) => (props.active ? '#F0ACFF' : '#ffffff')};\n`\n","const basisUrl = 'https://jsonplaceholder.typicode.com/'\n\nexport class Http {\n  static async getData(query) {\n    try {\n      const response = await fetch(basisUrl + query)\n\n      if (!response.ok) {\n        throw new Error(response)\n      }\n\n      const data = await response.json()\n\n      return data\n    } catch (error) {\n      console.error(error.message || error)\n      throw new Error(error)\n    }\n  }\n}\n","export const dataReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'INIT':\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case 'SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        posts: payload.posts,\n        users: payload.users,\n      }\n    case 'ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      }\n    default:\n      throw new Error()\n  }\n}\n","export const paginationReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'SET_INDEX':\n      return {\n        ...state,\n        idxLastPost: payload.idxLastPost,\n        idxFirstPost: payload.idxFirstPost,\n      }\n    case 'SET_TOTAL':\n      return {\n        ...state,\n        totalPages: payload.totalPages,\n      }\n    default:\n      throw new Error()\n  }\n}\n","import React from 'react'\n\nimport {\n  StyledPost,\n  PostTitle,\n  PostBody,\n  PostFooter,\n} from '../../styledComponents/styledComponents'\n\nexport const Post = ({ title, body, user }) => {\n  const { name = '', username = '' } = user\n\n  return (\n    <StyledPost>\n      <PostTitle>{title}</PostTitle>\n      <PostBody>{body}</PostBody>\n      <PostFooter>{`${name} (${username})`}</PostFooter>\n    </StyledPost>\n  )\n}\n","import React from 'react'\n\nimport { StyledPostList } from '../../styledComponents/styledComponents'\nimport { Post } from '../Post/Post'\n\nexport const PostList = ({ posts, users }) => {\n  let postListMap\n\n  if (posts && posts.length) {\n    postListMap = posts.map(({ id, userId, title = '', body = '' }) => {\n      return <Post key={id} user={users[userId]} title={title} body={body} />\n    })\n  }\n\n  return <StyledPostList>{postListMap}</StyledPostList>\n}\n","import React from 'react'\n\nimport {\n  StyledPagination,\n  PaginationList,\n  PaginationElement,\n} from '../../styledComponents/styledComponents'\n\nexport const Pagination = ({ totalPages = [], switchPage, currentPage }) => {\n  const total = totalPages.map((numPage) => {\n    return (\n      <PaginationElement\n        key={numPage}\n        onClick={() => switchPage(numPage)}\n        active={currentPage === numPage}\n      >\n        {numPage}\n      </PaginationElement>\n    )\n  })\n\n  return (\n    <StyledPagination>\n      <PaginationList>{total}</PaginationList>\n    </StyledPagination>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { useSetData } from '../../hooks/useSetData'\nimport { usePagination } from '../../hooks/usePagination'\nimport { usePostsFilter } from '../../hooks/usePostsFilter'\nimport { StyledApp, StyledInput } from '../../styledComponents/styledComponents'\nimport { PostList } from '../PostList/PostList'\nimport { Pagination } from '../Pagination/Pagination'\n\nconst App = () => {\n  const [searchValue, setSearchValue] = useState('')\n  const [{ posts, users, isLoading, isError }] = useSetData()\n  const [filteredPosts] = usePostsFilter(posts, searchValue)\n  const [\n    { idxFirstPost, idxLastPost, totalPages },\n    currentPage,\n    setPage,\n  ] = usePagination(filteredPosts.length)\n\n  let usersList\n\n  if (users && users.length) {\n    usersList = users.reduce((result, user) => {\n      if (!result[user.id]) {\n        result[user.id] = user\n      }\n\n      return result\n    }, {})\n  }\n\n  let currentPosts\n\n  if (filteredPosts && filteredPosts.length) {\n    currentPosts = filteredPosts.slice(idxFirstPost, idxLastPost)\n  }\n\n  const switchPage = (numPage) => {\n    setPage(numPage)\n  }\n\n  const searchHandler = (event) => {\n    setSearchValue(event.target.value)\n    setPage(1)\n  }\n\n  return (\n    <StyledApp>\n      {isError && <div>Something went wrong...</div>}\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          <StyledInput\n            value={searchValue}\n            onChange={searchHandler}\n            placeholder=\"Search\"\n          />\n          <PostList posts={currentPosts} users={usersList} />\n          <Pagination\n            totalPages={totalPages}\n            switchPage={switchPage}\n            currentPage={currentPage}\n          />\n        </>\n      )}\n    </StyledApp>\n  )\n}\n\nexport default App\n","import { useEffect, useReducer } from 'react'\nimport { Http } from '../services/http'\nimport { dataReducer } from '../reducers/dataReducer'\n\nexport const useSetData = () => {\n  const [state, dispatch] = useReducer(dataReducer, {\n    posts: {},\n    users: {},\n    isLoading: false,\n    isError: false,\n  })\n\n  useEffect(() => {\n    dispatch({ type: 'INIT' })\n\n    const getData = async () => {\n      try {\n        const posts = await Http.getData('posts')\n        const users = await Http.getData('users')\n\n        if (posts && users) {\n          dispatch({\n            type: 'SUCCESS',\n            payload: {\n              posts,\n              users,\n            },\n          })\n        }\n      } catch (error) {\n        dispatch({ type: 'ERROR' })\n      }\n    }\n\n    getData()\n  }, [])\n\n  return [state]\n}\n","import { useState, useEffect } from 'react'\n\nexport const usePostsFilter = (posts, value) => {\n  const [filteredPosts, setFilteredPosts] = useState([])\n\n  useEffect(() => {\n    if (posts && posts.length) {\n      setFilteredPosts(posts.filter((post) => post.title.includes(value)))\n    }\n  }, [posts, value])\n\n  return [filteredPosts]\n}\n","import { useState, useEffect, useReducer } from 'react'\n\nimport { paginationReducer } from '../reducers/paginationReducer'\n\nexport const usePagination = (length) => {\n  const [currentPage, setPage] = useState(1)\n  const [postsPerPage] = useState(10)\n\n  const [paginationState, dispatch] = useReducer(paginationReducer, {\n    totalPages: [],\n    idxFirstPost: 0,\n    idxLastPost: 0,\n  })\n\n  useEffect(() => {\n    const idxLastPost = currentPage * postsPerPage\n    const idxFirstPost = idxLastPost - postsPerPage\n\n    dispatch({\n      type: 'SET_INDEX',\n      payload: {\n        idxLastPost,\n        idxFirstPost,\n      },\n    })\n\n    const totalPages = []\n\n    for (let i = 1; i <= Math.ceil(length / postsPerPage); i++) {\n      totalPages.push(i)\n    }\n\n    dispatch({\n      type: 'SET_TOTAL',\n      payload: {\n        totalPages,\n      },\n    })\n  }, [currentPage, postsPerPage, length])\n\n  return [paginationState, currentPage, setPage]\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { GlobalStyle } from './styledComponents/styledComponents'\nimport App from './components/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}